// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.samples.petclinic.model.Pet;

public class Owner_getPet_f9297dd0a1_Test {
    private Owner owner;
    private Pet pet1;
    private Pet pet2;

    @BeforeEach
    public void setup() {
        owner = new Owner();
        pet1 = mock(Pet.class);
        pet2 = mock(Pet.class);
    }

    @Test
    public void testGetPet_found() {
        when(pet1.isNew()).thenReturn(false);
        when(pet1.getId()).thenReturn(1);
        when(pet2.isNew()).thenReturn(false);
        when(pet2.getId()).thenReturn(2);

        List<Pet> pets = new ArrayList<>(Arrays.asList(pet1, pet2));
        owner.setPetsInternal(pets);

        Pet pet = owner.getPet(1);
        assertEquals(pet1, pet);
    }

    @Test
    public void testGetPet_notFound() {
        when(pet1.isNew()).thenReturn(false);
        when(pet1.getId()).thenReturn(1);
        when(pet2.isNew()).thenReturn(false);
        when(pet2.getId()).thenReturn(2);

        List<Pet> pets = new ArrayList<>(Arrays.asList(pet1, pet2));
        owner.setPetsInternal(pets);

        Pet pet = owner.getPet(3);
        assertNull(pet);
    }

    @Test
    public void testGetPet_newPet() {
        when(pet1.isNew()).thenReturn(true);
        when(pet2.isNew()).thenReturn(false);
        when(pet2.getId()).thenReturn(2);

        List<Pet> pets = new ArrayList<>(Arrays.asList(pet1, pet2));
        owner.setPetsInternal(pets);

        Pet pet = owner.getPet(1);
        assertNull(pet);
    }
}
