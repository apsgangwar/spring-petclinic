// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.samples.petclinic.model.Visit;

import static org.mockito.Mockito.*;

public class Owner_addVisit_7e29d16554_Test {

    @InjectMocks
    Owner owner;

    @Mock
    Pet pet;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testAddVisit() {
        Visit visit = new Visit();
        owner.addVisit(1, visit);
        verify(pet, times(1)).addVisit(visit);
    }

    @Test
    public void testAddVisitWithNullPetId() {
        Visit visit = new Visit();
        try {
            owner.addVisit(null, visit);
        } catch (IllegalArgumentException e) {
            assertEquals("Pet identifier must not be null!", e.getMessage());
        }
    }

    @Test
    public void testAddVisitWithNullVisit() {
        try {
            owner.addVisit(1, null);
        } catch (IllegalArgumentException e) {
            assertEquals("Visit must not be null!", e.getMessage());
        }
    }

    @Test
    public void testAddVisitWithInvalidPetId() {
        Visit visit = new Visit();
        when(owner.getPet(2)).thenReturn(null);
        try {
            owner.addVisit(2, visit);
        } catch (IllegalArgumentException e) {
            assertEquals("Invalid Pet identifier!", e.getMessage());
        }
    }
}
