// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.samples.petclinic.model.Person;
import org.springframework.util.Assert;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

public class Owner_toString_ceffa8036e_Test {

    @Mock
    private Person person;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testToString() {
        when(person.getId()).thenReturn(1);
        when(person.isNew()).thenReturn(true);
        when(person.getLastName()).thenReturn("Doe");
        when(person.getFirstName()).thenReturn("John");
        when(person.getAddress()).thenReturn("123 Main St");
        when(person.getCity()).thenReturn("Springfield");
        when(person.getTelephone()).thenReturn("555-555-5555");

        String expected = new ToStringCreator(person)
                .append("id", person.getId())
                .append("new", person.isNew())
                .append("lastName", person.getLastName())
                .append("firstName", person.getFirstName())
                .append("address", person.getAddress())
                .append("city", person.getCity())
                .append("telephone", person.getTelephone())
                .toString();

        assertEquals(expected, person.toString());
    }

    @Test
    public void testToString_NullValues() {
        when(person.getId()).thenReturn(null);
        when(person.isNew()).thenReturn(null);
        when(person.getLastName()).thenReturn(null);
        when(person.getFirstName()).thenReturn(null);
        when(person.getAddress()).thenReturn(null);
        when(person.getCity()).thenReturn(null);
        when(person.getTelephone()).thenReturn(null);

        String expected = new ToStringCreator(person)
                .append("id", person.getId())
                .append("new", person.isNew())
                .append("lastName", person.getLastName())
                .append("firstName", person.getFirstName())
                .append("address", person.getAddress())
                .append("city", person.getCity())
                .append("telephone", person.getTelephone())
                .toString();

        assertEquals(expected, person.toString());
    }
}
