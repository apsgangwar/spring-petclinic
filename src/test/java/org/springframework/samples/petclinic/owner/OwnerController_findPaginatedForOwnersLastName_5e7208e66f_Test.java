// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

@ExtendWith(MockitoExtension.class)
public class OwnerController_findPaginatedForOwnersLastName_5e7208e66f_Test {

    @Mock
    private OwnerRepository owners;

    @InjectMocks
    private OwnerController controller;

    @BeforeEach
    public void setup() {
        Owner owner1 = new Owner();
        owner1.setLastName("Smith");
        Owner owner2 = new Owner();
        owner2.setLastName("Smith");
        List<Owner> ownerList = Arrays.asList(owner1, owner2);
        Page<Owner> page = new PageImpl<>(ownerList);
        when(owners.findByLastName("Smith", PageRequest.of(0, 5))).thenReturn(page);
    }

    @Test
    public void testFindPaginatedForOwnersLastName_success() {
        Page<Owner> page = controller.findPaginatedForOwnersLastName(1, "Smith");
        assertEquals(2, page.getContent().size());
        assertEquals("Smith", page.getContent().get(0).getLastName());
        assertEquals("Smith", page.getContent().get(1).getLastName());
    }

    @Test
    public void testFindPaginatedForOwnersLastName_noOwnersFound() {
        Page<Owner> page = controller.findPaginatedForOwnersLastName(1, "Johnson");
        assertEquals(0, page.getContent().size());
    }
}
