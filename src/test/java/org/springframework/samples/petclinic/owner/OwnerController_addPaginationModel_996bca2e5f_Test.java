// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.data.domain.Page;
import org.springframework.ui.Model;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class OwnerController_addPaginationModel_996bca2e5f_Test {

    @InjectMocks
    OwnerController ownerController;

    @Mock
    Model model;

    @Mock
    Page<Owner> paginated;

    @Test
    public void testAddPaginationModel() {
        Owner owner1 = new Owner();
        Owner owner2 = new Owner();
        List<Owner> listOwners = Arrays.asList(owner1, owner2);

        when(paginated.getContent()).thenReturn(listOwners);
        when(paginated.getTotalPages()).thenReturn(2);
        when(paginated.getTotalElements()).thenReturn(2L);

        String viewName = ownerController.addPaginationModel(1, model, paginated);

        verify(model, times(1)).addAttribute("currentPage", 1);
        verify(model, times(1)).addAttribute("totalPages", 2);
        verify(model, times(1)).addAttribute("totalItems", 2L);
        verify(model, times(1)).addAttribute("listOwners", listOwners);

        assertEquals("owners/ownersList", viewName);
    }

    @Test
    public void testAddPaginationModel_EmptyList() {
        List<Owner> listOwners = Arrays.asList();

        when(paginated.getContent()).thenReturn(listOwners);
        when(paginated.getTotalPages()).thenReturn(0);
        when(paginated.getTotalElements()).thenReturn(0L);

        String viewName = ownerController.addPaginationModel(1, model, paginated);

        verify(model, times(1)).addAttribute("currentPage", 1);
        verify(model, times(1)).addAttribute("totalPages", 0);
        verify(model, times(1)).addAttribute("totalItems", 0L);
        verify(model, times(1)).addAttribute("listOwners", listOwners);

        assertEquals("owners/ownersList", viewName);
    }
}
