// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.Test;
import org.springframework.ui.Model;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.times;

import java.util.Arrays;
import java.util.List;

public class OwnerController_addPaginationModel_996bca2e5f_Test {

    @Test
    public void testAddPaginationModel() {
        // Arrange
        int page = 1;
        Model model = mock(Model.class);
        List<Owner> owners = Arrays.asList(new Owner(), new Owner(), new Owner());
        Page<Owner> paginated = new PageImpl<>(owners);
        OwnerController controller = new OwnerController();

        // Act
        String view = controller.addPaginationModel(page, model, paginated);

        // Assert
        verify(model, times(1)).addAttribute("currentPage", page);
        verify(model, times(1)).addAttribute("totalPages", paginated.getTotalPages());
        verify(model, times(1)).addAttribute("totalItems", paginated.getTotalElements());
        verify(model, times(1)).addAttribute("listOwners", owners);
        assertEquals("owners/ownersList", view);
    }

    @Test
    public void testAddPaginationModelWithEmptyPage() {
        // Arrange
        int page = 1;
        Model model = mock(Model.class);
        Page<Owner> paginated = new PageImpl<>(Arrays.asList());
        OwnerController controller = new OwnerController();

        // Act
        String view = controller.addPaginationModel(page, model, paginated);

        // Assert
        verify(model, times(1)).addAttribute("currentPage", page);
        verify(model, times(1)).addAttribute("totalPages", paginated.getTotalPages());
        verify(model, times(1)).addAttribute("totalItems", paginated.getTotalElements());
        verify(model, times(1)).addAttribute("listOwners", Arrays.asList());
        assertEquals("owners/ownersList", view);
    }
}
