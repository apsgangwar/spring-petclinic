// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.samples.petclinic.model.Pet;

import static org.junit.jupiter.api.Assertions.*;

@SpringBootTest
class Owner_getPet_ff96e332a1_Test {

    @Test
    void testGetPetWithNameExistingAndNotNew() {
        Owner owner = new Owner();
        Pet pet1 = new Pet();
        pet1.setName("Rex");
        pet1.setNew(false);
        owner.addPet(pet1);

        Pet pet = owner.getPet("Rex", true);
        assertNotNull(pet);
        assertEquals("Rex", pet.getName());
    }

    @Test
    void testGetPetWithNameNotExisting() {
        Owner owner = new Owner();
        Pet pet1 = new Pet();
        pet1.setName("Rex");
        pet1.setNew(false);
        owner.addPet(pet1);

        Pet pet = owner.getPet("Bobby", true);
        assertNull(pet);
    }

    @Test
    void testGetPetWithNameExistingButNewAndIgnoreNew() {
        Owner owner = new Owner();
        Pet pet1 = new Pet();
        pet1.setName("Rex");
        pet1.setNew(true);
        owner.addPet(pet1);

        Pet pet = owner.getPet("Rex", true);
        assertNull(pet);
    }

    @Test
    void testGetPetWithNameExistingButNewAndNotIgnoreNew() {
        Owner owner = new Owner();
        Pet pet1 = new Pet();
        pet1.setName("Rex");
        pet1.setNew(true);
        owner.addPet(pet1);

        Pet pet = owner.getPet("Rex", false);
        assertNotNull(pet);
        assertEquals("Rex", pet.getName());
    }
}
