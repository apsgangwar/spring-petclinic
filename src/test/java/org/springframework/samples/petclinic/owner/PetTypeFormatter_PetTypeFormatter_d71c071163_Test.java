// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import java.text.ParseException;
import java.util.Locale;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.*;

public class PetTypeFormatter_PetTypeFormatter_d71c071163_Test {

    @Mock
    private OwnerRepository owners;

    @Autowired
    @InjectMocks
    private PetTypeFormatter petTypeFormatter;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.initMocks(this);
        petTypeFormatter = new PetTypeFormatter(owners);
    }

    @Test
    public void testParse_Success() throws ParseException {
        PetType petType = new PetType();
        petType.setId(1);
        petType.setName("Dog");
        when(owners.findPetTypes()).thenReturn(List.of(petType));

        PetType actual = petTypeFormatter.parse("Dog", Locale.ENGLISH);

        assertEquals(petType, actual);
    }

    @Test
    public void testParse_Failure() throws ParseException {
        PetType petType = new PetType();
        petType.setId(2);
        petType.setName("Cat");
        when(owners.findPetTypes()).thenReturn(List.of(petType));

        assertThrows(ParseException.class, () -> petTypeFormatter.parse("Dog", Locale.ENGLISH));
    }
}
