// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;

import java.text.ParseException;
import java.util.Locale;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class PetTypeFormatter_PetTypeFormatter_d71c071163_Test {

    @Mock
    private OwnerRepository owners;

    @InjectMocks
    private PetTypeFormatter petTypeFormatter;

    @BeforeEach
    public void setup() {
        PetType petType = new PetType();
        petType.setName("Dog");
        when(owners.findPetTypes()).thenReturn(Collections.singletonList(petType));
    }

    @Test
    public void testPrint() {
        PetType petType = new PetType();
        petType.setName("Dog");
        String petTypeName = petTypeFormatter.print(petType, Locale.ENGLISH);
        assertEquals("Dog", petTypeName);
    }

    @Test
    public void testParse() throws ParseException {
        PetType petType = petTypeFormatter.parse("Dog", Locale.ENGLISH);
        assertEquals("Dog", petType.getName());
    }

    @Test
    public void testParseThrowsParseException() {
        assertThrows(ParseException.class, () -> petTypeFormatter.parse("Unknown", Locale.ENGLISH));
    }
}
