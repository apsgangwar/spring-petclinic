// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.samples.petclinic.owner.Owner;
import org.springframework.samples.petclinic.owner.OwnerRepository;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
public class PetController_findOwner_0895b41fd2_Test {

    @Mock
    private OwnerRepository owners;

    @InjectMocks
    private PetController petController;

    private Owner owner;

    @BeforeEach
    public void setup() {
        owner = new Owner();
        owner.setId(1);
        owner.setFirstName("John");
        owner.setLastName("Doe");
    }

    @Test
    public void testFindOwner_success() {
        when(owners.findById(1)).thenReturn(owner);

        Owner foundOwner = petController.findOwner(1);

        assertEquals("John", foundOwner.getFirstName());
        assertEquals("Doe", foundOwner.getLastName());
    }

    @Test
    public void testFindOwner_failure() {
        when(owners.findById(1)).thenReturn(null);

        Exception exception = assertThrows(IllegalArgumentException.class, () -> {
            petController.findOwner(1);
        });

        assertEquals("Owner ID not found: 1", exception.getMessage());
    }
}
