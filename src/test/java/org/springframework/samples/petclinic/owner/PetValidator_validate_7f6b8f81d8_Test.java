// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.owner;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.util.StringUtils;
import org.springframework.validation.Errors;
import org.springframework.validation.Validator;

import java.time.LocalDate;

import static org.mockito.Mockito.verify;

public class PetValidator_validate_7f6b8f81d8_Test {

    @Mock
    private Errors errors;

    private Validator petValidator;
    private Pet pet;

    @BeforeEach
    public void setup() {
        MockitoAnnotations.openMocks(this);
        petValidator = new PetValidator();
        pet = new Pet();
    }

    @Test
    public void testValidate_nameIsNull() {
        pet.setName(null);
        pet.setType(new PetType());
        pet.setBirthDate(LocalDate.now());

        petValidator.validate(pet, errors);

        verify(errors).rejectValue("name", "required", "required");
    }

    @Test
    public void testValidate_typeIsNull() {
        pet.setName("Fido");
        pet.setType(null);
        pet.setBirthDate(LocalDate.now());

        petValidator.validate(pet, errors);

        verify(errors).rejectValue("type", "required", "required");
    }

    @Test
    public void testValidate_birthDateIsNull() {
        pet.setName("Fido");
        pet.setType(new PetType());
        pet.setBirthDate(null);

        petValidator.validate(pet, errors);

        verify(errors).rejectValue("birthDate", "required", "required");
    }

    @Test
    public void testValidate_allFieldsAreValid() {
        pet.setName("Fido");
        pet.setType(new PetType());
        pet.setBirthDate(LocalDate.now());

        petValidator.validate(pet, errors);

        verify(errors, Mockito.never()).rejectValue(Mockito.anyString(), Mockito.anyString(), Mockito.anyString());
    }
}
