// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.vet;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.Arrays;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest
public class VetController_showResourcesVetList_845ab7f7ca_Test {

    @Mock
    private VetRepository vetRepository;

    @InjectMocks
    private VetController vetController;

    private Vets vets;

    @BeforeEach
    public void setup() {
        Vet vet1 = new Vet();
        vet1.setId(1);
        vet1.setFirstName("John");
        vet1.setLastName("Doe");

        Vet vet2 = new Vet();
        vet2.setId(2);
        vet2.setFirstName("Jane");
        vet2.setLastName("Doe");

        vets = new Vets();
        vets.getVetList().addAll(Arrays.asList(vet1, vet2));
    }

    @Test
    public void testShowResourcesVetListSuccess() {
        when(vetRepository.findAll()).thenReturn(vets.getVetList());

        Vets result = vetController.showResourcesVetList();

        assertEquals(vets, result);
    }

    @Test
    public void testShowResourcesVetListEmpty() {
        vets.getVetList().clear();
        when(vetRepository.findAll()).thenReturn(vets.getVetList());

        Vets result = vetController.showResourcesVetList();

        assertEquals(vets, result);
    }
}
