// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.vet;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.ui.Model;

public class VetController_showVetList_e923f1f5e9_Test {

    @InjectMocks
    VetController vetController;

    @Mock
    Model model;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testShowVetList() {
        int page = 1;
        Page<Vet> paginated = createMockPage();
        when(vetController.findPaginated(page)).thenReturn(paginated);
        String result = vetController.showVetList(page, model);
        assertEquals("vets/vetList", result);
    }

    @Test
    public void testShowVetList_EmptyPage() {
        int page = 1;
        Page<Vet> paginated = new PageImpl<>(new ArrayList<>());
        when(vetController.findPaginated(page)).thenReturn(paginated);
        String result = vetController.showVetList(page, model);
        assertEquals("vets/vetList", result);
    }

    private Page<Vet> createMockPage() {
        List<Vet> vets = new ArrayList<>();
        Vet vet = mock(Vet.class);
        vets.add(vet);
        return new PageImpl<>(vets);
    }
}
