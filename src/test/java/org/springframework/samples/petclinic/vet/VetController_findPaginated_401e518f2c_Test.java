// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.vet;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageImpl;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

public class VetController_findPaginated_401e518f2c_Test {

    @Mock
    private VetRepository vetRepository;

    @InjectMocks
    private VetController vetController;

    @BeforeEach
    public void init() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testFindPaginated() {
        Vet vet1 = new Vet();
        Vet vet2 = new Vet();

        Pageable pageable = PageRequest.of(0, 5);
        Page<Vet> vetPage = new PageImpl<>(Stream.of(vet1, vet2).collect(Collectors.toList()));

        when(vetRepository.findAll(pageable)).thenReturn(vetPage);

        Page<Vet> result = vetController.findPaginated(1);

        assertEquals(2, result.getTotalElements());
    }

    @Test
    public void testFindPaginated_NoRecords() {
        Pageable pageable = PageRequest.of(0, 5);
        Page<Vet> vetPage = Page.empty(pageable);

        when(vetRepository.findAll(pageable)).thenReturn(vetPage);

        Page<Vet> result = vetController.findPaginated(1);

        assertEquals(0, result.getTotalElements());
    }
}
