// Test generated by RoostGPT for test aps-java-pet using AI Type Open AI and AI Model gpt-4

package org.springframework.samples.petclinic.system;

import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;
import org.springframework.cache.annotation.EnableCaching;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import javax.cache.configuration.MutableConfiguration;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import javax.cache.CacheManager;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
@EnableCaching
@Configuration
public class CacheConfiguration_petclinicCacheConfigurationCustomizer_adca9b283f_Test {

    @InjectMocks
    CacheConfiguration cacheConfiguration;

    @Mock
    CacheManager cm;

    @Mock
    MutableConfiguration<Object, Object> cacheConfiguration;

    @Test
    public void testPetclinicCacheConfigurationCustomizer() {
        JCacheManagerCustomizer jCacheManagerCustomizer = cacheConfiguration.petclinicCacheConfigurationCustomizer();
        jCacheManagerCustomizer.customize(cm);
        verify(cm, times(1)).createCache("vets", cacheConfiguration);
    }

    @Test
    public void testPetclinicCacheConfigurationCustomizerWithDifferentCacheName() {
        JCacheManagerCustomizer jCacheManagerCustomizer = cacheConfiguration.petclinicCacheConfigurationCustomizer();
        jCacheManagerCustomizer.customize(cm);
        verify(cm, times(0)).createCache("owners", cacheConfiguration);
    }

}
